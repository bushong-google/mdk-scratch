---
name: Reusable Docker Build & Push

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      gcp_project_id:
        required: true
        type: string
      ar_region:
        required: true
        type: string
      ar_repository:
        required: true
        type: string
      docker_image:
        required: true
        type: string
      dockerfile_path:
        required: true
        type: string
      deploy:
        required: false
        type: boolean
        default: false
      allow_unauthenticated:
        required: false
        type: boolean
        default: false
    secrets:
      GLOBAL_WIF_PROVIDER:
        required: true

jobs:
  docker-build:
    environment: ${{ inputs.environment }}
    runs-on: [self-hosted, onprem-k8s-arc, dind, enterprise, lnx-amd64]
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1.3.0
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GLOBAL_WIF_PROVIDER }}"
          service_account: "gh-automation@${{ inputs.gcp_project_id }}.iam.gserviceaccount.com"

      - name: Generate Image Version
        id: version
        uses: ./.github/actions/generate_image_version

      - name: Build Docker Image
        uses: ./.github/actions/docker_build
        with:
          image_tag: "${{ inputs.ar_region }}/\
            ${{ inputs.gcp_project_id }}/\
            ${{ inputs.ar_repository }}/\
            ${{ inputs.docker_image }}:\
            ${{ steps.version.outputs.image_version }}"
          build_context: "."  # Ensuring correct build context
          dockerfile: "${{ inputs.dockerfile_path }}"

      - name: Push Docker Image to GCR
        uses: ./.github/actions/docker_push
        with:
          image_tag: "${{ inputs.ar_region }}/\
            ${{ inputs.gcp_project_id }}/\
            ${{ inputs.ar_repository }}/\
            ${{ inputs.docker_image }}:\
            ${{ steps.version.outputs.image_version }}"
          remote_repository: "${{ inputs.ar_region }}/\
            ${{ inputs.gcp_project_id }}/\
            ${{ inputs.ar_repository }}/\
            ${{ inputs.docker_image }}:\
            ${{ steps.version.outputs.image_version }}"
          registry_auth: 'gcloud auth configure-docker ${{ inputs.ar_region }}'
        env:
          GCP_SA_KEY: ${{ secrets.gcp_sa_key }}

  deploy:
    if: ${{ inputs.deploy == 'true' }}
    needs: docker-build
    runs-on: [self-hosted, onprem-k8s-arc, dind, enterprise, lnx-amd64]

    steps:
      - name: Deploy to Cloud Run
        uses: ./.github/actions/cloud_run_deploy
        with:
          gcp_project_id: "${{ inputs.gcp_project_id }}"
          service_name: "${{ inputs.docker_image }}"
          # Using docker_image name as the service name
          region: "us-central1"
          image_url: "${{ inputs.ar_region }}/\
            ${{ inputs.gcp_project_id }}/\
            ${{ inputs.docker_image }}:\
            ${{ steps.version.outputs.image_version }}"
          allow_unauthenticated: "${{ inputs.allow_unauthenticated }}"
